id: lnbits-lite
version: 0.1.50
title: "LNBits LITE LEGEND"
description:
  short: "LNbits LEGEND LITE v0.1 BETA, free and open-source lightning-network wallet/accounts system"
  long: "LNbits LEGEND LITE v0.1 BETA, free and open-source lightning-network wallet/accounts system"
release-notes: | 
  - Added SQLite WEB
  - Added options to install python plugins
  Initial release.
license: mit
wrapper-repo: https://github.com/deanhowe/embassy-lnbits-wrapper-lite
upstream-repo: https://github.com/lnbits/lnbits-legend.git
support-site: "https://t.me/joinchat/Fb4OcRo4LrRD6NXfsNdeeQ"
marketing-site: https://lnbits.moof.uk/
donation-url: "http://gn762eiwgzelmanmakwjynnp6i3oaucl2uftil27bkxtf5ucuzjmseyd.onion/lnurlp/1"
marketplace_url: "https://embassy-registry.proxy.moof.uk/lnbits-lite"

alerts:
  install-alert: "LNbits is BETA software - this plugin is ALPHA software USE AT YOUR OWN RISK"
  uninstall-alert: "LNBITS WALLETS DELETED?"
  restore-alert: "Hopefully you can restore service and wallets from an Embassy backup?"
  start-alert: "LNbits is BETA software - this plugin is ALPHA software USE AT YOUR OWN RISK"

min-os-version: "0.3.0"

assets:
  # Default = LICENSE.md
  license: LICENSE
  # Default = icon.png
  icon: icon.png
  # Default = INSTRUCTIONS.md
  instructions: docs/instructions.md
  # Default = image.tar
  docker-images: image.tar

# The main action for initializing the service. Currently, the only type of action available is docker.
main:
  type: docker
  image: main
  entrypoint: "/docker_entrypoint.sh"
  args: []
  mounts:
    lnd: /mnt/lnd
    c-lightning: "/mnt/c-lightning"
    main: /datadir
  io-format: yaml

health-checks: {}
##config: ~ # Configuration options, none for hello-world, but see below example for format:
config:
  get:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args: 
      - config
      - get
      - /datadir
      - "/mnt/assets/config_spec.yaml"
    mounts:
      compat: /mnt/assets
      main: /datadir
    io-format: yaml
  set:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - set
      - "lnbits-lite"
      - /datadir
      - "/mnt/assets/config_rules.yaml"
      - "/mnt/assets/dependencies.yaml"
    mounts:
      compat: /mnt/assets
      main: /datadir
    io-format: yaml
# Port mappings from tor ports to the container port
# if lan is standard, it will proxy HTTP traffic from 443 to the internal port
interfaces:
  sqlite:
    name: sqlite
    description: Web interface for ALL LNBits SQLite Databases
    tor-config:
      port-mapping:
        80: "8080"
    lan-config:
      443:
        ssl: true
        internal: 8080
    ui: false
    protocols:
      - tcp
      - http
  instance-one:
    name: Instance I
    description: LNbits Instance I
    tor-config:
      port-mapping:
        80: "5000"
    ui: true
    protocols:
      - tcp
      - http
  instance-two:
    name: Instance II
    description: LNbits Instance II
    tor-config:
      port-mapping:
        80: "5001"
    ui: true
    protocols:
      - tcp
      - http
  instance-three:
    name: Instance III
    description: LNbits Instance III
    tor-config:
      port-mapping:
        80: "5002"
    ui: true
    protocols:
      - tcp
      - http
  instance-four:
    name: Instance IV
    description: LNbits Instance IV
    tor-config:
      port-mapping:
        80: "5003"
    ui: true
    protocols:
      - tcp
      - http
  instance-five:
    name: Instance V
    description: LNbits Instance V
    tor-config:
      port-mapping:
        80: "5004"
    ui: true
    protocols:
      - tcp
      - http
  instance-six:
    name: Instance VI
    description: LNbits Instance VI
    tor-config:
      port-mapping:
        80: "5005"
    ui: true
    protocols:
      - tcp
      - http

dependencies:
  lnd:
    version: ">=0.11.1 <0.14.0"
    description: "The LND node you wish to use with LNBits LEGEND"
    requirement:
      type: required
    config: ~
  c-lightning:
    version: ">=0.10.1 <0.11.0"
    description: Used to communicate with the Lightning Network.
    requirement:
      type: required
    config: ~
volumes:
  main:
    type: data
  compat:
    type: assets
  lnd:
    type: pointer
    package-id: lnd
    volume-id: main
    path: "/public"
    readonly: true
  c-lightning:
    type: pointer
    package-id: c-lightning
    volume-id: main
    path: "/shared"
    readonly: false

backup:
  create:
    type: docker
    image: compat # default backup process of the compat docker image is duplicity - EOS will have access to the image defined here
    system: true 
    entrypoint: compat # command to run the backup executable, in this case, duplicity
    args: # arguments to pass into the entrypoint, in this case duplicity - in this example, the full command run will be: `duplicity hello-world file:///mnt/backup /root`
      - duplicity
      - lnbits-lite
      - /mnt/backup
      - /root
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/root"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - lnbits-lite
      - /root
      - /mnt/backup
    mounts:
      # See above comments under `backup: -> mounts:`
      BACKUP: "/mnt/backup"
      main: "/root"
# screen -S 5000 -X quit
actions:
  start-linbits:
    name: "Start Instance I"
    description: "This action will START LNBits on port 5000"
    allowed-statuses:
      - "running"
    implementation:
      type: docker
      image: main
      entrypoint: /lnbits/venv/bin/create_lnbits_instance
      args: ["0"]
      inject: true
      io-format: json
  start-linbits-two:
    name: "Start Instance II"
    description: "This action will START LNBits on port 50001"
    allowed-statuses:
      - "running"
    implementation:
      type: docker
      image: main
      entrypoint: /lnbits/venv/bin/create_lnbits_instance
      args: ["1"]
      inject: true
      io-format: json
  start-linbits-three:
    name: "Start Instance III"
    description: "This action will START LNBits on port 50002"
    allowed-statuses:
      - "running"
    implementation:
      type: docker
      image: main
      entrypoint: /lnbits/venv/bin/create_lnbits_instance
      args: ["2"]
      inject: true
      io-format: json
  start-linbits-four:
    name: "Start Instance IV"
    description: "This action will START LNBits on port 50003"
    allowed-statuses:
      - "running"
    implementation:
      type: docker
      image: main
      entrypoint: /lnbits/venv/bin/create_lnbits_instance
      args: ["3"]
      inject: true
      io-format: json
  start-linbits-five:
    name: "Start Instance V"
    description: "This action will START LNBits on port 50004"
    allowed-statuses:
      - "running"
    implementation:
      type: docker
      image: main
      entrypoint: /lnbits/venv/bin/create_lnbits_instance
      args: ["4"]
      inject: true
      io-format: json
  start-linbits-six:
    name: "Start Instance VI"
    description: "This action will START LNBits on port 50005"
    allowed-statuses:
      - "running"
    implementation:
      type: docker
      image: main
      entrypoint: /lnbits/venv/bin/create_lnbits_instance
      args: ["5"]
      inject: true
      io-format: json
